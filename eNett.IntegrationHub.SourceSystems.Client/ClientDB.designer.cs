#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eNett.IntegrationHub.SourceSystems.Client
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Client")]
	public partial class ClientDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertClientContact(ClientContact instance);
    partial void UpdateClientContact(ClientContact instance);
    partial void DeleteClientContact(ClientContact instance);
    #endregion
		
		public ClientDBDataContext() : 
				base(global::eNett.IntegrationHub.SourceSystems.Client.Properties.Settings.Default.ClientConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<ClientContact> ClientContacts
		{
			get
			{
				return this.GetTable<ClientContact>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ECN;
		
		private string _TradingAs;
		
		private string _LegalName;
		
		private string _TrustName;
		
		private string _MerchantDescriptor;
		
		private int _ClientTypeID;
		
		private int _CountryID;
		
		private int _DefaultCurrencyID;
		
		private int _ClientStatusID;
		
		private int _EntityTypeID;
		
		private int _FeePaymentMethodID;
		
		private string _FeeInvoiceEmailAddress;
		
		private System.Nullable<decimal> _FeeMinimum;
		
		private System.Nullable<bool> _ReceiveEmail;
		
		private bool _Active;
		
		private bool _Hidden;
		
		private bool _ExpressSettlement;
		
		private string _AcceptsCC;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _ActivationDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private string _FinancialYearEnd;
		
		private System.Nullable<int> _ParentECN;
		
		private string _Value1;
		
		private string _Value2;
		
		private string _Value3;
		
		private string _Value4;
		
		private string _Value5;
		
		private System.Nullable<bool> _IsSupplier;
		
		private System.Nullable<System.DateTime> _Reported;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private System.Nullable<bool> _IsMasterDetailsSent;
		
		private bool _IsTramada;
		
		private System.Nullable<int> _BillToECN;
		
		private System.Nullable<int> _MSFTaxTypeID;
		
		private System.Nullable<int> _BillingEntityID;
		
		private string _ClientKey;
		
		private System.Nullable<int> _ReferrerECN;
		
		private System.Nullable<int> _PricingECN;
		
		private System.Nullable<int> _ClientOrgId;
		
		private System.Nullable<int> _ClosedTradingHubGroupID;
		
		private System.Nullable<int> _eNettMerchantTypeId;
		
		private string _SalesForceId;
		
		private string _ParentSalesForceId;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<System.DateTime> _DueDiligenceExpiry;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private EntitySet<ClientContact> _ClientContacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnECNChanging(int value);
    partial void OnECNChanged();
    partial void OnTradingAsChanging(string value);
    partial void OnTradingAsChanged();
    partial void OnLegalNameChanging(string value);
    partial void OnLegalNameChanged();
    partial void OnTrustNameChanging(string value);
    partial void OnTrustNameChanged();
    partial void OnMerchantDescriptorChanging(string value);
    partial void OnMerchantDescriptorChanged();
    partial void OnClientTypeIDChanging(int value);
    partial void OnClientTypeIDChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnDefaultCurrencyIDChanging(int value);
    partial void OnDefaultCurrencyIDChanged();
    partial void OnClientStatusIDChanging(int value);
    partial void OnClientStatusIDChanged();
    partial void OnEntityTypeIDChanging(int value);
    partial void OnEntityTypeIDChanged();
    partial void OnFeePaymentMethodIDChanging(int value);
    partial void OnFeePaymentMethodIDChanged();
    partial void OnFeeInvoiceEmailAddressChanging(string value);
    partial void OnFeeInvoiceEmailAddressChanged();
    partial void OnFeeMinimumChanging(System.Nullable<decimal> value);
    partial void OnFeeMinimumChanged();
    partial void OnReceiveEmailChanging(System.Nullable<bool> value);
    partial void OnReceiveEmailChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    partial void OnExpressSettlementChanging(bool value);
    partial void OnExpressSettlementChanged();
    partial void OnAcceptsCCChanging(string value);
    partial void OnAcceptsCCChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnFinancialYearEndChanging(string value);
    partial void OnFinancialYearEndChanged();
    partial void OnParentECNChanging(System.Nullable<int> value);
    partial void OnParentECNChanged();
    partial void OnValue1Changing(string value);
    partial void OnValue1Changed();
    partial void OnValue2Changing(string value);
    partial void OnValue2Changed();
    partial void OnValue3Changing(string value);
    partial void OnValue3Changed();
    partial void OnValue4Changing(string value);
    partial void OnValue4Changed();
    partial void OnValue5Changing(string value);
    partial void OnValue5Changed();
    partial void OnIsSupplierChanging(System.Nullable<bool> value);
    partial void OnIsSupplierChanged();
    partial void OnReportedChanging(System.Nullable<System.DateTime> value);
    partial void OnReportedChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    partial void OnIsMasterDetailsSentChanging(System.Nullable<bool> value);
    partial void OnIsMasterDetailsSentChanged();
    partial void OnIsTramadaChanging(bool value);
    partial void OnIsTramadaChanged();
    partial void OnBillToECNChanging(System.Nullable<int> value);
    partial void OnBillToECNChanged();
    partial void OnMSFTaxTypeIDChanging(System.Nullable<int> value);
    partial void OnMSFTaxTypeIDChanged();
    partial void OnBillingEntityIDChanging(System.Nullable<int> value);
    partial void OnBillingEntityIDChanged();
    partial void OnClientKeyChanging(string value);
    partial void OnClientKeyChanged();
    partial void OnReferrerECNChanging(System.Nullable<int> value);
    partial void OnReferrerECNChanged();
    partial void OnPricingECNChanging(System.Nullable<int> value);
    partial void OnPricingECNChanged();
    partial void OnClientOrgIdChanging(System.Nullable<int> value);
    partial void OnClientOrgIdChanged();
    partial void OnClosedTradingHubGroupIDChanging(System.Nullable<int> value);
    partial void OnClosedTradingHubGroupIDChanged();
    partial void OneNettMerchantTypeIdChanging(System.Nullable<int> value);
    partial void OneNettMerchantTypeIdChanged();
    partial void OnSalesForceIdChanging(string value);
    partial void OnSalesForceIdChanged();
    partial void OnParentSalesForceIdChanging(string value);
    partial void OnParentSalesForceIdChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnDueDiligenceExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDiligenceExpiryChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    #endregion
		
		public Client()
		{
			this._ClientContacts = new EntitySet<ClientContact>(new Action<ClientContact>(this.attach_ClientContacts), new Action<ClientContact>(this.detach_ClientContacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECN", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ECN
		{
			get
			{
				return this._ECN;
			}
			set
			{
				if ((this._ECN != value))
				{
					this.OnECNChanging(value);
					this.SendPropertyChanging();
					this._ECN = value;
					this.SendPropertyChanged("ECN");
					this.OnECNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradingAs", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TradingAs
		{
			get
			{
				return this._TradingAs;
			}
			set
			{
				if ((this._TradingAs != value))
				{
					this.OnTradingAsChanging(value);
					this.SendPropertyChanging();
					this._TradingAs = value;
					this.SendPropertyChanged("TradingAs");
					this.OnTradingAsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LegalName
		{
			get
			{
				return this._LegalName;
			}
			set
			{
				if ((this._LegalName != value))
				{
					this.OnLegalNameChanging(value);
					this.SendPropertyChanging();
					this._LegalName = value;
					this.SendPropertyChanged("LegalName");
					this.OnLegalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TrustName
		{
			get
			{
				return this._TrustName;
			}
			set
			{
				if ((this._TrustName != value))
				{
					this.OnTrustNameChanging(value);
					this.SendPropertyChanging();
					this._TrustName = value;
					this.SendPropertyChanged("TrustName");
					this.OnTrustNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantDescriptor", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MerchantDescriptor
		{
			get
			{
				return this._MerchantDescriptor;
			}
			set
			{
				if ((this._MerchantDescriptor != value))
				{
					this.OnMerchantDescriptorChanging(value);
					this.SendPropertyChanging();
					this._MerchantDescriptor = value;
					this.SendPropertyChanged("MerchantDescriptor");
					this.OnMerchantDescriptorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ClientTypeID
		{
			get
			{
				return this._ClientTypeID;
			}
			set
			{
				if ((this._ClientTypeID != value))
				{
					this.OnClientTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ClientTypeID = value;
					this.SendPropertyChanged("ClientTypeID");
					this.OnClientTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCurrencyID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DefaultCurrencyID
		{
			get
			{
				return this._DefaultCurrencyID;
			}
			set
			{
				if ((this._DefaultCurrencyID != value))
				{
					this.OnDefaultCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultCurrencyID = value;
					this.SendPropertyChanged("DefaultCurrencyID");
					this.OnDefaultCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientStatusID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ClientStatusID
		{
			get
			{
				return this._ClientStatusID;
			}
			set
			{
				if ((this._ClientStatusID != value))
				{
					this.OnClientStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ClientStatusID = value;
					this.SendPropertyChanged("ClientStatusID");
					this.OnClientStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this.OnEntityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeID = value;
					this.SendPropertyChanged("EntityTypeID");
					this.OnEntityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentMethodID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int FeePaymentMethodID
		{
			get
			{
				return this._FeePaymentMethodID;
			}
			set
			{
				if ((this._FeePaymentMethodID != value))
				{
					this.OnFeePaymentMethodIDChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentMethodID = value;
					this.SendPropertyChanged("FeePaymentMethodID");
					this.OnFeePaymentMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeInvoiceEmailAddress", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string FeeInvoiceEmailAddress
		{
			get
			{
				return this._FeeInvoiceEmailAddress;
			}
			set
			{
				if ((this._FeeInvoiceEmailAddress != value))
				{
					this.OnFeeInvoiceEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._FeeInvoiceEmailAddress = value;
					this.SendPropertyChanged("FeeInvoiceEmailAddress");
					this.OnFeeInvoiceEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeMinimum", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FeeMinimum
		{
			get
			{
				return this._FeeMinimum;
			}
			set
			{
				if ((this._FeeMinimum != value))
				{
					this.OnFeeMinimumChanging(value);
					this.SendPropertyChanging();
					this._FeeMinimum = value;
					this.SendPropertyChanged("FeeMinimum");
					this.OnFeeMinimumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveEmail", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ReceiveEmail
		{
			get
			{
				return this._ReceiveEmail;
			}
			set
			{
				if ((this._ReceiveEmail != value))
				{
					this.OnReceiveEmailChanging(value);
					this.SendPropertyChanging();
					this._ReceiveEmail = value;
					this.SendPropertyChanged("ReceiveEmail");
					this.OnReceiveEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpressSettlement", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExpressSettlement
		{
			get
			{
				return this._ExpressSettlement;
			}
			set
			{
				if ((this._ExpressSettlement != value))
				{
					this.OnExpressSettlementChanging(value);
					this.SendPropertyChanging();
					this._ExpressSettlement = value;
					this.SendPropertyChanged("ExpressSettlement");
					this.OnExpressSettlementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptsCC", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string AcceptsCC
		{
			get
			{
				return this._AcceptsCC;
			}
			set
			{
				if ((this._AcceptsCC != value))
				{
					this.OnAcceptsCCChanging(value);
					this.SendPropertyChanging();
					this._AcceptsCC = value;
					this.SendPropertyChanged("AcceptsCC");
					this.OnAcceptsCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ActivationDate
		{
			get
			{
				return this._ActivationDate;
			}
			set
			{
				if ((this._ActivationDate != value))
				{
					this.OnActivationDateChanging(value);
					this.SendPropertyChanging();
					this._ActivationDate = value;
					this.SendPropertyChanged("ActivationDate");
					this.OnActivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialYearEnd", DbType="Char(4)", UpdateCheck=UpdateCheck.Never)]
		public string FinancialYearEnd
		{
			get
			{
				return this._FinancialYearEnd;
			}
			set
			{
				if ((this._FinancialYearEnd != value))
				{
					this.OnFinancialYearEndChanging(value);
					this.SendPropertyChanging();
					this._FinancialYearEnd = value;
					this.SendPropertyChanged("FinancialYearEnd");
					this.OnFinancialYearEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentECN", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentECN
		{
			get
			{
				return this._ParentECN;
			}
			set
			{
				if ((this._ParentECN != value))
				{
					this.OnParentECNChanging(value);
					this.SendPropertyChanging();
					this._ParentECN = value;
					this.SendPropertyChanged("ParentECN");
					this.OnParentECNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value1", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Value1
		{
			get
			{
				return this._Value1;
			}
			set
			{
				if ((this._Value1 != value))
				{
					this.OnValue1Changing(value);
					this.SendPropertyChanging();
					this._Value1 = value;
					this.SendPropertyChanged("Value1");
					this.OnValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value2", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Value2
		{
			get
			{
				return this._Value2;
			}
			set
			{
				if ((this._Value2 != value))
				{
					this.OnValue2Changing(value);
					this.SendPropertyChanging();
					this._Value2 = value;
					this.SendPropertyChanged("Value2");
					this.OnValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value3", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Value3
		{
			get
			{
				return this._Value3;
			}
			set
			{
				if ((this._Value3 != value))
				{
					this.OnValue3Changing(value);
					this.SendPropertyChanging();
					this._Value3 = value;
					this.SendPropertyChanged("Value3");
					this.OnValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value4", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Value4
		{
			get
			{
				return this._Value4;
			}
			set
			{
				if ((this._Value4 != value))
				{
					this.OnValue4Changing(value);
					this.SendPropertyChanging();
					this._Value4 = value;
					this.SendPropertyChanged("Value4");
					this.OnValue4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value5", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Value5
		{
			get
			{
				return this._Value5;
			}
			set
			{
				if ((this._Value5 != value))
				{
					this.OnValue5Changing(value);
					this.SendPropertyChanging();
					this._Value5 = value;
					this.SendPropertyChanged("Value5");
					this.OnValue5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSupplier", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsSupplier
		{
			get
			{
				return this._IsSupplier;
			}
			set
			{
				if ((this._IsSupplier != value))
				{
					this.OnIsSupplierChanging(value);
					this.SendPropertyChanging();
					this._IsSupplier = value;
					this.SendPropertyChanged("IsSupplier");
					this.OnIsSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Reported
		{
			get
			{
				return this._Reported;
			}
			set
			{
				if ((this._Reported != value))
				{
					this.OnReportedChanging(value);
					this.SendPropertyChanging();
					this._Reported = value;
					this.SendPropertyChanged("Reported");
					this.OnReportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMasterDetailsSent", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsMasterDetailsSent
		{
			get
			{
				return this._IsMasterDetailsSent;
			}
			set
			{
				if ((this._IsMasterDetailsSent != value))
				{
					this.OnIsMasterDetailsSentChanging(value);
					this.SendPropertyChanging();
					this._IsMasterDetailsSent = value;
					this.SendPropertyChanged("IsMasterDetailsSent");
					this.OnIsMasterDetailsSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTramada", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsTramada
		{
			get
			{
				return this._IsTramada;
			}
			set
			{
				if ((this._IsTramada != value))
				{
					this.OnIsTramadaChanging(value);
					this.SendPropertyChanging();
					this._IsTramada = value;
					this.SendPropertyChanged("IsTramada");
					this.OnIsTramadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToECN", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BillToECN
		{
			get
			{
				return this._BillToECN;
			}
			set
			{
				if ((this._BillToECN != value))
				{
					this.OnBillToECNChanging(value);
					this.SendPropertyChanging();
					this._BillToECN = value;
					this.SendPropertyChanged("BillToECN");
					this.OnBillToECNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSFTaxTypeID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MSFTaxTypeID
		{
			get
			{
				return this._MSFTaxTypeID;
			}
			set
			{
				if ((this._MSFTaxTypeID != value))
				{
					this.OnMSFTaxTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MSFTaxTypeID = value;
					this.SendPropertyChanged("MSFTaxTypeID");
					this.OnMSFTaxTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingEntityID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BillingEntityID
		{
			get
			{
				return this._BillingEntityID;
			}
			set
			{
				if ((this._BillingEntityID != value))
				{
					this.OnBillingEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BillingEntityID = value;
					this.SendPropertyChanged("BillingEntityID");
					this.OnBillingEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientKey", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string ClientKey
		{
			get
			{
				return this._ClientKey;
			}
			set
			{
				if ((this._ClientKey != value))
				{
					this.OnClientKeyChanging(value);
					this.SendPropertyChanging();
					this._ClientKey = value;
					this.SendPropertyChanged("ClientKey");
					this.OnClientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferrerECN", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ReferrerECN
		{
			get
			{
				return this._ReferrerECN;
			}
			set
			{
				if ((this._ReferrerECN != value))
				{
					this.OnReferrerECNChanging(value);
					this.SendPropertyChanging();
					this._ReferrerECN = value;
					this.SendPropertyChanged("ReferrerECN");
					this.OnReferrerECNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingECN", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PricingECN
		{
			get
			{
				return this._PricingECN;
			}
			set
			{
				if ((this._PricingECN != value))
				{
					this.OnPricingECNChanging(value);
					this.SendPropertyChanging();
					this._PricingECN = value;
					this.SendPropertyChanged("PricingECN");
					this.OnPricingECNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientOrgId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ClientOrgId
		{
			get
			{
				return this._ClientOrgId;
			}
			set
			{
				if ((this._ClientOrgId != value))
				{
					this.OnClientOrgIdChanging(value);
					this.SendPropertyChanging();
					this._ClientOrgId = value;
					this.SendPropertyChanged("ClientOrgId");
					this.OnClientOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedTradingHubGroupID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ClosedTradingHubGroupID
		{
			get
			{
				return this._ClosedTradingHubGroupID;
			}
			set
			{
				if ((this._ClosedTradingHubGroupID != value))
				{
					this.OnClosedTradingHubGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ClosedTradingHubGroupID = value;
					this.SendPropertyChanged("ClosedTradingHubGroupID");
					this.OnClosedTradingHubGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eNettMerchantTypeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> eNettMerchantTypeId
		{
			get
			{
				return this._eNettMerchantTypeId;
			}
			set
			{
				if ((this._eNettMerchantTypeId != value))
				{
					this.OneNettMerchantTypeIdChanging(value);
					this.SendPropertyChanging();
					this._eNettMerchantTypeId = value;
					this.SendPropertyChanged("eNettMerchantTypeId");
					this.OneNettMerchantTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesForceId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SalesForceId
		{
			get
			{
				return this._SalesForceId;
			}
			set
			{
				if ((this._SalesForceId != value))
				{
					this.OnSalesForceIdChanging(value);
					this.SendPropertyChanging();
					this._SalesForceId = value;
					this.SendPropertyChanged("SalesForceId");
					this.OnSalesForceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSalesForceId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ParentSalesForceId
		{
			get
			{
				return this._ParentSalesForceId;
			}
			set
			{
				if ((this._ParentSalesForceId != value))
				{
					this.OnParentSalesForceIdChanging(value);
					this.SendPropertyChanging();
					this._ParentSalesForceId = value;
					this.SendPropertyChanged("ParentSalesForceId");
					this.OnParentSalesForceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDiligenceExpiry", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DueDiligenceExpiry
		{
			get
			{
				return this._DueDiligenceExpiry;
			}
			set
			{
				if ((this._DueDiligenceExpiry != value))
				{
					this.OnDueDiligenceExpiryChanging(value);
					this.SendPropertyChanging();
					this._DueDiligenceExpiry = value;
					this.SendPropertyChanged("DueDiligenceExpiry");
					this.OnDueDiligenceExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ClientContact", Storage="_ClientContacts", ThisKey="ECN", OtherKey="ECN")]
		public EntitySet<ClientContact> ClientContacts
		{
			get
			{
				return this._ClientContacts;
			}
			set
			{
				this._ClientContacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientContacts(ClientContact entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_ClientContacts(ClientContact entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientContact")]
	public partial class ClientContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientContactID;
		
		private string _Title;
		
		private string _GivenName;
		
		private string _Surname;
		
		private string _Position;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Mobile;
		
		private string _Email;
		
		private int _ContactTypeID;
		
		private int _ECN;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private string _SalesForceContactId;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientContactIDChanging(int value);
    partial void OnClientContactIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGivenNameChanging(string value);
    partial void OnGivenNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactTypeIDChanging(int value);
    partial void OnContactTypeIDChanged();
    partial void OnECNChanging(int value);
    partial void OnECNChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    partial void OnSalesForceContactIdChanging(string value);
    partial void OnSalesForceContactIdChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public ClientContact()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ClientContactID
		{
			get
			{
				return this._ClientContactID;
			}
			set
			{
				if ((this._ClientContactID != value))
				{
					this.OnClientContactIDChanging(value);
					this.SendPropertyChanging();
					this._ClientContactID = value;
					this.SendPropertyChanged("ClientContactID");
					this.OnClientContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this.OnGivenNameChanging(value);
					this.SendPropertyChanging();
					this._GivenName = value;
					this.SendPropertyChanged("GivenName");
					this.OnGivenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ContactTypeID
		{
			get
			{
				return this._ContactTypeID;
			}
			set
			{
				if ((this._ContactTypeID != value))
				{
					this.OnContactTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContactTypeID = value;
					this.SendPropertyChanged("ContactTypeID");
					this.OnContactTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECN", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ECN
		{
			get
			{
				return this._ECN;
			}
			set
			{
				if ((this._ECN != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnECNChanging(value);
					this.SendPropertyChanging();
					this._ECN = value;
					this.SendPropertyChanged("ECN");
					this.OnECNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesForceContactId", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SalesForceContactId
		{
			get
			{
				return this._SalesForceContactId;
			}
			set
			{
				if ((this._SalesForceContactId != value))
				{
					this.OnSalesForceContactIdChanging(value);
					this.SendPropertyChanging();
					this._SalesForceContactId = value;
					this.SendPropertyChanged("SalesForceContactId");
					this.OnSalesForceContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ClientContact", Storage="_Client", ThisKey="ECN", OtherKey="ECN", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.ClientContacts.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.ClientContacts.Add(this);
						this._ECN = value.ECN;
					}
					else
					{
						this._ECN = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
